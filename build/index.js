(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var createGameOverScene;

createGameOverScene = function(game, nextSceneFunc) {
  var gameOverLabel, gameOverScene, isRelease, scoreLabel;
  gameOverLabel = new Label('GAME OVER');
  gameOverLabel.color = '#ffffff';
  gameOverLabel.x = 250;
  gameOverLabel.y = 100;
  scoreLabel = new Label("" + window.score);
  scoreLabel.color = '#ffffff';
  scoreLabel.x = 250;
  scoreLabel.y = 125;
  gameOverScene = new Scene();
  gameOverScene.backgroundColor = "#000000";
  gameOverScene.addChild(gameOverLabel);
  gameOverScene.addChild(scoreLabel);
  isRelease = false;
  gameOverScene.addEventListener('enterframe', function() {
    scoreLabel.text = "" + window.score;
    if (game.input.a) {
      if (isRelease) {
        isRelease = false;
        return nextSceneFunc();
      }
    } else {
      return isRelease = true;
    }
  });
  return gameOverScene;
};

module.exports = createGameOverScene;



},{}],2:[function(require,module,exports){
var createGameScene;

createGameScene = function(game, gameOverSceneFunc) {
  var gameScene, isClear, kokoro, score, scoreLabel, stars, x, y;
  gameScene = new Scene();
  gameScene.backgroundColor = "#000000";
  kokoro = new Sprite(16, 16);
  kokoro.image = game.assets['vendor/enchant.js-builds-0.8.2-b/images/icon0.png'];
  gameScene.addChild(kokoro);
  kokoro.frame = 0x0a;
  scoreLabel = new Label('0');
  scoreLabel.color = '#ffffff';
  gameScene.addChild(scoreLabel);
  stars = [];
  isClear = true;
  x = 0;
  y = 0;
  score = 0;
  gameScene.addEventListener('enterframe', function() {
    var dels, i, isDead, j, len, len1, star;
    if (isClear) {
      for (i = 0, len = stars.length; i < len; i++) {
        star = stars[i];
        gameScene.removeChild(star);
      }
      stars = [];
      score = 0;
      scoreLabel.text = '0';
      kokoro.x = 0;
      kokoro.y = 50;
      x = 0;
      y = 0;
      isClear = false;
    }
    if (stars.length < 30) {
      star = new Sprite(16, 16);
      star.image = game.assets['vendor/enchant.js-builds-0.8.2-b/images/icon0.png'];
      gameScene.addChild(star);
      star.frame = 0x1e;
      star.scale(0.5, 0.5);
      star.x = Math.floor(Math.random() * 50) + 500;
      star.y = Math.floor(Math.random() * 250) + 30;
      star.deltaX = Math.random() * 2 + 0.25;
      star.deltaY = 1;
      stars.push(star);
    }
    isDead = false;
    if (game.input.a) {
      if (y > -5) {
        y -= 0.5;
      }
    } else {
      if (y < 5) {
        y += 0.5;
      }
    }
    if (game.input.left) {
      if (x > -5) {
        x -= 0.5;
      }
    }
    if (game.input.right) {
      if (x < 5) {
        x += 0.5;
      }
    }
    kokoro.x += x;
    kokoro.y += y;
    if (kokoro.x < 0) {
      kokoro.x = 0;
    }
    if (kokoro.x > 500) {
      kokoro.x = 500;
    }
    if (kokoro.y < 20) {
      kokoro.y = 20;
    }
    if (kokoro.y > 320) {
      isDead = true;
    }
    dels = [];
    for (j = 0, len1 = stars.length; j < len1; j++) {
      star = stars[j];
      star.y += star.deltaY;
      star.x -= star.deltaX;
      if (star.y > 315 || star.y < 5) {
        star.deltaY = -star.deltaY;
      }
      if (star.x < 0) {
        gameScene.removeChild(star);
        dels.push(star);
      }
      if (star.intersect(kokoro)) {
        isDead = true;
      }
    }
    stars = _.difference(stars, dels);
    if (isDead) {
      isClear = true;
      window.score = score;
      gameOverSceneFunc();
    }
    score += 10;
    return scoreLabel.text = "" + score;
  });
  return gameScene;
};

module.exports = createGameScene;



},{}],3:[function(require,module,exports){
var createGameOverScene, createGameScene, createTitleScene, game;

enchant();

game = new Core(640, 320);

game.preload('vendor/enchant.js-builds-0.8.2-b/images/icon0.png');

game.fps = 30;

game.start();

createGameScene = require('./game_scene.coffee');

createGameOverScene = require('./game_over_scene.coffee');

createTitleScene = require('./title_scene.coffee');

game.onload = function() {
  var gameOverScene, gameScene, titleScene;
  titleScene = createTitleScene(game, (function(_this) {
    return function() {
      return game.replaceScene(gameScene);
    };
  })(this));
  gameScene = createGameScene(game, (function(_this) {
    return function() {
      return game.replaceScene(gameOverScene);
    };
  })(this));
  gameOverScene = createGameOverScene(game, (function(_this) {
    return function() {
      return game.replaceScene(gameScene);
    };
  })(this));
  game.keybind(' '.charCodeAt(0), 'a');
  return game.pushScene(titleScene);
};



},{"./game_over_scene.coffee":1,"./game_scene.coffee":2,"./title_scene.coffee":4}],4:[function(require,module,exports){
var createTitleScene;

createTitleScene = function(game, nextSceneFunc) {
  var gameOverLabel, gameOverScene;
  gameOverLabel = new Label('ココロトリップ');
  gameOverLabel.color = '#ffffff';
  gameOverLabel.x = 250;
  gameOverLabel.y = 100;
  gameOverScene = new Scene();
  gameOverScene.backgroundColor = "#000000";
  gameOverScene.addChild(gameOverLabel);
  gameOverScene.addEventListener('enterframe', function() {
    if (game.input.a) {
      return nextSceneFunc();
    }
  });
  return gameOverScene;
};

module.exports = createTitleScene;



},{}]},{},[3])
//# sourceMappingURL=data:application/json;base64,
